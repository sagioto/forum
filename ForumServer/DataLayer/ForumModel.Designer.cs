//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ForumModel", "FK_tblPostKeys_tblUsers", "tblUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ForumServer.DataLayer.UserEntity), "tblPostKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ForumServer.DataLayer.PostKeyEntity), true)]

#endregion

namespace ForumServer.DataLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ForumEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ForumEntities object using the connection string found in the 'ForumEntities' section of the application configuration file.
        /// </summary>
        public ForumEntities() : base("name=ForumEntities", "ForumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForumEntities object.
        /// </summary>
        public ForumEntities(string connectionString) : base(connectionString, "ForumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ForumEntities object.
        /// </summary>
        public ForumEntities(EntityConnection connection) : base(connection, "ForumEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostKeyEntity> PostKeyEntities
        {
            get
            {
                if ((_PostKeyEntities == null))
                {
                    _PostKeyEntities = base.CreateObjectSet<PostKeyEntity>("PostKeyEntities");
                }
                return _PostKeyEntities;
            }
        }
        private ObjectSet<PostKeyEntity> _PostKeyEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostEntity> PostEntities
        {
            get
            {
                if ((_PostEntities == null))
                {
                    _PostEntities = base.CreateObjectSet<PostEntity>("PostEntities");
                }
                return _PostEntities;
            }
        }
        private ObjectSet<PostEntity> _PostEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserEntity> UserEntities
        {
            get
            {
                if ((_UserEntities == null))
                {
                    _UserEntities = base.CreateObjectSet<UserEntity>("UserEntities");
                }
                return _UserEntities;
            }
        }
        private ObjectSet<UserEntity> _UserEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubforumEntity> SubforumEntities
        {
            get
            {
                if ((_SubforumEntities == null))
                {
                    _SubforumEntities = base.CreateObjectSet<SubforumEntity>("SubforumEntities");
                }
                return _SubforumEntities;
            }
        }
        private ObjectSet<SubforumEntity> _SubforumEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModeratorEntity> ModeratorEntities
        {
            get
            {
                if ((_ModeratorEntities == null))
                {
                    _ModeratorEntities = base.CreateObjectSet<ModeratorEntity>("ModeratorEntities");
                }
                return _ModeratorEntities;
            }
        }
        private ObjectSet<ModeratorEntity> _ModeratorEntities;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostKeyEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostKeyEntities(PostKeyEntity postKeyEntity)
        {
            base.AddObject("PostKeyEntities", postKeyEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostEntities(PostEntity postEntity)
        {
            base.AddObject("PostEntities", postEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserEntities(UserEntity userEntity)
        {
            base.AddObject("UserEntities", userEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubforumEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubforumEntities(SubforumEntity subforumEntity)
        {
            base.AddObject("SubforumEntities", subforumEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModeratorEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModeratorEntities(ModeratorEntity moderatorEntity)
        {
            base.AddObject("ModeratorEntities", moderatorEntity);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumModel", Name="ModeratorEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModeratorEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModeratorEntity object.
        /// </summary>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="subforum">Initial value of the Subforum property.</param>
        public static ModeratorEntity CreateModeratorEntity(global::System.String username, global::System.String subforum)
        {
            ModeratorEntity moderatorEntity = new ModeratorEntity();
            moderatorEntity.Username = username;
            moderatorEntity.Subforum = subforum;
            return moderatorEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                if (_Username != value)
                {
                    OnUsernameChanging(value);
                    ReportPropertyChanging("Username");
                    _Username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Username");
                    OnUsernameChanged();
                }
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subforum
        {
            get
            {
                return _Subforum;
            }
            set
            {
                if (_Subforum != value)
                {
                    OnSubforumChanging(value);
                    ReportPropertyChanging("Subforum");
                    _Subforum = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Subforum");
                    OnSubforumChanged();
                }
            }
        }
        private global::System.String _Subforum;
        partial void OnSubforumChanging(global::System.String value);
        partial void OnSubforumChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumModel", Name="PostEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostEntity object.
        /// </summary>
        /// <param name="postKeyId">Initial value of the PostKeyId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="subforumName">Initial value of the SubforumName property.</param>
        public static PostEntity CreatePostEntity(global::System.Int32 postKeyId, global::System.String title, global::System.String subforumName)
        {
            PostEntity postEntity = new PostEntity();
            postEntity.PostKeyId = postKeyId;
            postEntity.Title = title;
            postEntity.SubforumName = subforumName;
            return postEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostKeyId
        {
            get
            {
                return _PostKeyId;
            }
            set
            {
                if (_PostKeyId != value)
                {
                    OnPostKeyIdChanging(value);
                    ReportPropertyChanging("PostKeyId");
                    _PostKeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostKeyId");
                    OnPostKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _PostKeyId;
        partial void OnPostKeyIdChanging(global::System.Int32 value);
        partial void OnPostKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentPostKeyId
        {
            get
            {
                return _ParentPostKeyId;
            }
            set
            {
                OnParentPostKeyIdChanging(value);
                ReportPropertyChanging("ParentPostKeyId");
                _ParentPostKeyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentPostKeyId");
                OnParentPostKeyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentPostKeyId;
        partial void OnParentPostKeyIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentPostKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubforumName
        {
            get
            {
                return _SubforumName;
            }
            set
            {
                OnSubforumNameChanging(value);
                ReportPropertyChanging("SubforumName");
                _SubforumName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubforumName");
                OnSubforumNameChanged();
            }
        }
        private global::System.String _SubforumName;
        partial void OnSubforumNameChanging(global::System.String value);
        partial void OnSubforumNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumModel", Name="PostKeyEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostKeyEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostKeyEntity object.
        /// </summary>
        /// <param name="postKeyId">Initial value of the PostKeyId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static PostKeyEntity CreatePostKeyEntity(global::System.Int32 postKeyId, global::System.String username, global::System.DateTime time)
        {
            PostKeyEntity postKeyEntity = new PostKeyEntity();
            postKeyEntity.PostKeyId = postKeyId;
            postKeyEntity.Username = username;
            postKeyEntity.Time = time;
            return postKeyEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostKeyId
        {
            get
            {
                return _PostKeyId;
            }
            set
            {
                if (_PostKeyId != value)
                {
                    OnPostKeyIdChanging(value);
                    ReportPropertyChanging("PostKeyId");
                    _PostKeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostKeyId");
                    OnPostKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _PostKeyId;
        partial void OnPostKeyIdChanging(global::System.Int32 value);
        partial void OnPostKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumModel", "FK_tblPostKeys_tblUsers", "tblUser")]
        public UserEntity tblUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserEntity>("ForumModel.FK_tblPostKeys_tblUsers", "tblUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserEntity>("ForumModel.FK_tblPostKeys_tblUsers", "tblUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserEntity> tblUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserEntity>("ForumModel.FK_tblPostKeys_tblUsers", "tblUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserEntity>("ForumModel.FK_tblPostKeys_tblUsers", "tblUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumModel", Name="SubforumEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubforumEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubforumEntity object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static SubforumEntity CreateSubforumEntity(global::System.String name)
        {
            SubforumEntity subforumEntity = new SubforumEntity();
            subforumEntity.Name = name;
            return subforumEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ForumModel", Name="UserEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserEntity object.
        /// </summary>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="authentication">Initial value of the Authentication property.</param>
        public static UserEntity CreateUserEntity(global::System.String userName, global::System.String password, global::System.String authentication)
        {
            UserEntity userEntity = new UserEntity();
            userEntity.UserName = userName;
            userEntity.Password = password;
            userEntity.Authentication = authentication;
            return userEntity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Authentication
        {
            get
            {
                return _Authentication;
            }
            set
            {
                OnAuthenticationChanging(value);
                ReportPropertyChanging("Authentication");
                _Authentication = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Authentication");
                OnAuthenticationChanged();
            }
        }
        private global::System.String _Authentication;
        partial void OnAuthenticationChanging(global::System.String value);
        partial void OnAuthenticationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ForumModel", "FK_tblPostKeys_tblUsers", "tblPostKey")]
        public EntityCollection<PostKeyEntity> tblPostKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostKeyEntity>("ForumModel.FK_tblPostKeys_tblUsers", "tblPostKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostKeyEntity>("ForumModel.FK_tblPostKeys_tblUsers", "tblPostKey", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
