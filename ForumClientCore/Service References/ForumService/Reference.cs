//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ForumClientCore.ForumService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/ForumServer")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ForumService.IForumService", CallbackContract=typeof(ForumClientCore.ForumService.IForumServiceCallback))]
    public interface IForumService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/Enter", ReplyAction="http://tempuri.org/IForumService/EnterResponse")]
        string Enter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/Register", ReplyAction="http://tempuri.org/IForumService/RegisterResponse")]
        bool Register(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/Login", ReplyAction="http://tempuri.org/IForumService/LoginResponse")]
        bool Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/Logout", ReplyAction="http://tempuri.org/IForumService/LogoutResponse")]
        bool Logout(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetSubforumsList", ReplyAction="http://tempuri.org/IForumService/GetSubforumsListResponse")]
        string GetSubforumsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetSubforum", ReplyAction="http://tempuri.org/IForumService/GetSubforumResponse")]
        string GetSubforum(string subforum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetPost", ReplyAction="http://tempuri.org/IForumService/GetPostResponse")]
        string GetPost(string postkey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/Post", ReplyAction="http://tempuri.org/IForumService/PostResponse")]
        bool Post(string current, string toPost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/Reply", ReplyAction="http://tempuri.org/IForumService/ReplyResponse")]
        bool Reply(string current, string toPost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/Subscribe", ReplyAction="http://tempuri.org/IForumService/SubscribeResponse")]
        string Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/AddMessage", ReplyAction="http://tempuri.org/IForumService/AddMessageResponse")]
        bool AddMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/SubscribeToForum", ReplyAction="http://tempuri.org/IForumService/SubscribeToForumResponse")]
        bool SubscribeToForum();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/UnsubscribeFromForum", ReplyAction="http://tempuri.org/IForumService/UnsubscribeFromForumResponse")]
        bool UnsubscribeFromForum();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetData", ReplyAction="http://tempuri.org/IForumService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IForumService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IForumService/GetDataUsingDataContractResponse")]
        ForumClientCore.ForumService.CompositeType GetDataUsingDataContract(ForumClientCore.ForumService.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IForumServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IForumService/onUpdate")]
        void onUpdate(string message, System.DateTime timestamp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IForumServiceChannel : ForumClientCore.ForumService.IForumService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForumServiceClient : System.ServiceModel.DuplexClientBase<ForumClientCore.ForumService.IForumService>, ForumClientCore.ForumService.IForumService {
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ForumServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Enter() {
            return base.Channel.Enter();
        }
        
        public bool Register(string username, string password) {
            return base.Channel.Register(username, password);
        }
        
        public bool Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public bool Logout(string username) {
            return base.Channel.Logout(username);
        }
        
        public string GetSubforumsList() {
            return base.Channel.GetSubforumsList();
        }
        
        public string GetSubforum(string subforum) {
            return base.Channel.GetSubforum(subforum);
        }
        
        public string GetPost(string postkey) {
            return base.Channel.GetPost(postkey);
        }
        
        public bool Post(string current, string toPost) {
            return base.Channel.Post(current, toPost);
        }
        
        public bool Reply(string current, string toPost) {
            return base.Channel.Reply(current, toPost);
        }
        
        public string Subscribe() {
            return base.Channel.Subscribe();
        }
        
        public bool AddMessage(string message) {
            return base.Channel.AddMessage(message);
        }
        
        public bool SubscribeToForum() {
            return base.Channel.SubscribeToForum();
        }
        
        public bool UnsubscribeFromForum() {
            return base.Channel.UnsubscribeFromForum();
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public ForumClientCore.ForumService.CompositeType GetDataUsingDataContract(ForumClientCore.ForumService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
    }
}
